name: Jupyter series image

on:
  push:
    branches:
      - master
      - workflow
    paths:
      - 'jupyter/**'
      - '.github/workflows/build_jupyter.yml'
      - '.github/actions'
  workflow_dispatch:


jobs:
  base-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Pre-build setup
        uses: ./.github/actions/pre-build
        with:
          ghcr_secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Download jupyter docker stack
        run: |
          curdir=$(pwd)
          git clone --depth 1 https://github.com/jupyter/docker-stacks.git
          cd docker-stacks
          git fetch origin ${{ env.JUPYTER_COMMIT_HASH }}
          git checkout ${{ env.JUPYTER_COMMIT_HASH }}
          cd $curdir/docker-stacks/images/docker-stacks-foundation/
          cp $curdir/jupyter/base/* ./
          cat Dockerfile.part >> Dockerfile

      - name: Build on top of foundation image
        uses: docker/build-push-action@v5
        with:
          context: docker-stacks/images/docker-stacks-foundation
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_base:latest
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_base:oss-${{ env.DATE }}-ubuntu${{ env.UBUNTU_VERSION }}
          build-args: |
            ROOT_IMAGE=docker.io/ubuntu:${{ env.UBUNTU_VERSION }}
            PYTHON_VERSION=${{ env.BASE_PY_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  worker-image:
    needs: base-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Pre-build setup
        uses: ./.github/actions/pre-build
        with:
          ghcr_secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./jupyter/worker
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_worker:latest
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_worker:oss-${{ env.DATE }}-ubuntu${{ env.UBUNTU_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  pytorch-image-cpu:
    needs: worker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Pre-build setup
        uses: ./.github/actions/pre-build
        with:
          ghcr_secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Combine Dockerfile
        run: |
          cd ./jupyter/pytorch/
          cat Dockerfile.cpu >> Dockerfile
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./jupyter/pytorch
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_pytorch:latest
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_pytorch:cpu
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_pytorch:cpu-${{ env.DATE }}-ubuntu${{ env.UBUNTU_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  pytorch-image-cuda:
    needs: worker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Pre-build setup
        uses: ./.github/actions/pre-build
        with:
          ghcr_secret: ${{ secrets.GITHUB_TOKEN }}
      - name: Combine Dockerfile
        run: |
          cd ./jupyter/pytorch/
          cat Dockerfile.cuda >> Dockerfile
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./jupyter/pytorch
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_pytorch:cuda
             ghcr.io/${{ env.REPO_OWNER }}/jupyter_pytorch:cuda${{ env.MAJOR_CUDA_VERSION }}-${{ env.DATE }}-ubuntu${{ env.UBUNTU_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  # # trigger-downstream:
  # #   needs: build-image
  # #   runs-on: ubuntu-latest
  # #   steps:
  # #     - name: Checkout
  # #       uses: actions/checkout@v5
  # #     - name: Rebuild downstream images
  # #       run: |
  # #         gh workflow run build_worker.yml
  # #       env:
  # #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
