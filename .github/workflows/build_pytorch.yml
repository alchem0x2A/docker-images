name: Build the mlchem_pytorch container

on:
  push:
    branches:
      - master
      - workflow
    paths:
      - 'mlchem_pytorch/**'
      - '.github/workflows/build_pytorch.yml'
  workflow_dispatch:



jobs:
  build-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
          - cuda
          - cpu
    steps:
      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          df -h
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Github Container Repo
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "REPO_OWNER=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Inject env variables
        uses: falti/dotenv-action@v1.0.4
        with:
          path: ./env
          export-variables: true
          keys-case: bypass

      - name: Get Current Date
        id: date
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >>${GITHUB_ENV}

      - name: Check disk space
        run: |
          df -h
      - name: Combine Dockerfile
        run: |
          cd ./mlchem_pytorch/
          cat Dockerfile.${{ matrix.variant }} >> Dockerfile
      - name: Build with foundation image -- cuda
        uses: docker/build-push-action@v5
        with:
          context: ./mlchem_pytorch/
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/mlchem_pytorch:cuda
             ghcr.io/${{ env.REPO_OWNER }}/mlchem_pytorch:${{ env.MAJOR_CUDA_VERSION }}-cuda${{ env.MAJOR_CUDA_VERSION }}-${{ env.DATE }}
          build-args: |
             CUDA_VERSION=${{ env.MAJOR_CUDA_VERSION }}
             PYTORCH_VERSION=${{ env.PYTORCH_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # aarch64 do not have cuda variant
          platforms: linux/amd64
        if: matrix.variant == 'cuda'
      - name: Build with foundation image -- cpu
        uses: docker/build-push-action@v5
        with:
          context: ./mlchem_pytorch/
          push: true
          tags: |
             ghcr.io/${{ env.REPO_OWNER }}/mlchem_pytorch:latest
             ghcr.io/${{ env.REPO_OWNER }}/mlchem_pytorch:cpu
             ghcr.io/${{ env.REPO_OWNER }}/mlchem_pytorch:${{ env.MAJOR_CUDA_VERSION }}-cpu-${{ env.DATE }}
          build-args: |
             CUDA_VERSION=${{ env.MAJOR_CUDA_VERSION }}
             PYTORCH_VERSION=${{ env.PYTORCH_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # aarch64 do not have cuda variant
          platforms: linux/amd64,linux/arm64
        if: matrix.variant == 'cpu'


  trigger-downstream:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Rebuild downstream images
        run: |
          gh workflow run build_mlchem.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
